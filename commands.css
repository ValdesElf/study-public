commands {
    width: 200px; /*ширина*/
    height: 100px; /*высота*/
    background-color: red; /*цвет*/
    padding: 20px; /*паддинг (впуклость бордера)*/
    margin: 0 auto; /*данное свойство всегда будет выравнивать внутри родителя по центру*/
    margin: 0; /*отступы, в нормалайз всё уже сделано*/
    background-size: cover; /*картинка?фон будет растягиваться на весь монитор*/ 
}

html{
    box-sizing: border-box; /*блок не изменяет параметры своей геометрии из за паддинга*/
}
*, *::before, *::after{
    box-sizing: inherit; /*inherit - наследовать от родителя*/
}

justify-content{
    flex-start: элементы выравниваются по левой стороне контейнера.
    flex-end: элементы выравниваются по правой стороне контейнера.
    center: элементы выравниваются по центру контейнера.
    space-between: элементы отображаются с одинаковыми отступами между ними.
    space-around: элементы отображаются с одинаковыми отступами вокруг них.
}

align-items{
    flex-start: элементы выравниваются по верхнему краю контейнера.
    flex-end: элементы выравниваются по нижнему краю контейнера.
    center: элементы выравниваются вертикально по центру контейнера.
    baseline: элементы отображаются на базовой линии контейнера.
    stretch: элементы растягиваются, чтобы заполнить контейнер.
}

flex-direction{
    row: элементы размещаются по направлению текста.
    row-reverse: элементы отображаются в обратном порядке к направлению текста.
    column: элементы располагаются сверху вниз.
    column-reverse: элементы располагаются снизу вверх.
}

flex-wrap{
    nowrap: размеры элементов устанавливаются автоматически, чтобы они поместились в один ряд.
    wrap: элементы автоматически переносятся на новую строку.
    wrap-reverse: элементы автоматически переносятся на новую строку, но строки расположены в обратном порядке.
}

flex-flow{
    Два свойства flex-direction и flex-wrap используются так часто вместе, что было создано свойство flex-flow для их комбинирования. Это свойство принимает их значения, разделённые пробелом.
    flex-flow: row wrap, чтобы элементы располагались в ряд и автоматически переносились на новую строку.
}

align-content{
    Это может запутать, но align-content отвечает за расстояние между рядами, в то время как align-items отвечает за то, как элементы в целом будут выровнены в контейнере. Когда только один ряд, align-content ни на что не влияет.
    flex-start: ряды группируются в верхней части контейнера.
    flex-end: ряды группируются в нижней части контейнера.
    center: ряды группируются вертикально по центру контейнера.
    space-between: ряды отображаются с одинаковыми расстояниями между ними.
    space-around: ряды отображаются с одинаковыми расстояниями вокруг них.
    stretch: ряды растягиваются, чтобы заполнить контейнер равномерно.
}

selector{
    A+ выбирает все элементы после А
    А~Б выбирает все элементы от и до Б
}